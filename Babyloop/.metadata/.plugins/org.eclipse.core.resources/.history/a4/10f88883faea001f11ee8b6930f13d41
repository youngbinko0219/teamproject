package com.babyloop.service;

import com.google.cloud.storage.Acl;
import com.google.cloud.storage.Acl.Role;
import com.google.cloud.storage.Acl.User;
import com.google.cloud.storage.Blob;
import com.google.firebase.cloud.StorageClient;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.Arrays;

@Service
public class FirebaseStorageService {

    /**
     * MultipartFile을 받아서 Firebase Storage에 업로드하고, 파일의 공개 URL을 반환한다.
     *
     * @param file     업로드할 파일
     * @param fileName Storage에 저장할 파일명 (보통 UUID + 원본파일명)
     * @return 업로드된 파일의 공개 URL
     */
    public String uploadFile(MultipartFile file, String fileName) {
        try {
            // Storage Bucket 가져오기
            com.google.cloud.storage.Bucket bucket = StorageClient.getInstance().bucket();
            
            // 파일 업로드: file.getBytes()를 이용해 파일의 바이트 데이터를 업로드하며, contentType도 함께 지정
            Blob blob = bucket.create(fileName, file.getBytes(), file.getContentType());
            
            // (옵션) 업로드한 파일을 public 읽기 권한으로 변경 → 이후 URL로 바로 접근 가능하도록 함
            blob.toBuilder().setAcl(Arrays.asList(Acl.of(User.ofAllUsers(), Role.READER))).build().update();

            // public URL 구성: bucket이 public이면 아래 URL로 접근 가능함.
            String publicUrl = String.format("https://storage.googleapis.com/%s/%s", bucket.getName(), blob.getName());
            return publicUrl;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
}
