package com.babyloop.service;

import com.google.cloud.storage.Acl;
import com.google.cloud.storage.Acl.Role;
import com.google.cloud.storage.Acl.User;
import com.google.cloud.storage.Blob;
import com.google.firebase.cloud.StorageClient;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.IOException;
import java.util.Arrays;

@Service
public class FirebaseStorageService {

	
	/**
     * MultipartFile을 받아서 Firebase Storage의 "imgs" 폴더에 업로드하고, 파일의 공개 URL을 반환한다.
     *
     * @param file 업로드할 파일
     * @return 업로드된 파일의 공개 URL, 실패 시 null
     */
    public String uploadFile(MultipartFile file) {
        try {
            // Storage Bucket 가져오기
            Bucket bucket = StorageClient.getInstance().bucket();
            
            // UUID를 이용하여 고유 파일명 생성 (원본 파일명 없이)
            String uniqueFileName = "imgs/" + UUID.randomUUID().toString() + ".pdf";
            
            // 파일 업로드: 파일의 바이트 데이터를 업로드하며, contentType도 함께 지정
            Blob blob = bucket.create(uniqueFileName, file.getBytes(), file.getContentType());
            
            // 업로드한 파일을 public 읽기 권한으로 변경 (URL로 직접 접근 가능)
            blob.toBuilder()
                .setAcl(Arrays.asList(Acl.of(User.ofAllUsers(), Role.READER)))
                .build()
                .update();
            
            // public URL 구성
            String publicUrl = String.format("https://storage.googleapis.com/%s/%s", bucket.getName(), blob.getName());
            return publicUrl;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    
    /*PDF 업로드*/
    public String uploadPdfToFirebase(byte[] pdfBytes, String paymentId) {
        // Firebase Admin SDK 초기화 후 Bucket 사용
        Bucket bucket = StorageClient.getInstance().bucket();
        String fileName = "영수증/" + paymentId + ".pdf";

        Blob blob = bucket.create(fileName, pdfBytes, "application/pdf");
        
        // 파일의 공개 URL 생성 (파일 공개 설정이 필요)
        // 예시: Storage 버킷이 공개 액세스를 허용하는 경우
        String fileUrl = String.format("https://firebasestorage.googleapis.com/v0/b/%s/o/%s?alt=media",
                bucket.getName(), URLEncoder.encode(fileName, StandardCharsets.UTF_8));
        return fileUrl;
    }
    
}
